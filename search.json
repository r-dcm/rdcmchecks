[{"path":[]},{"path":"https://rdcmchecks.r-dcm.org/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://rdcmchecks.r-dcm.org/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://rdcmchecks.r-dcm.org/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://rdcmchecks.r-dcm.org/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://rdcmchecks.r-dcm.org/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement wjakethompson@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://rdcmchecks.r-dcm.org/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://rdcmchecks.r-dcm.org/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://rdcmchecks.r-dcm.org/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://rdcmchecks.r-dcm.org/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://rdcmchecks.r-dcm.org/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://rdcmchecks.r-dcm.org/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://rdcmchecks.r-dcm.org/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to dcmdata","title":"Contributing to dcmdata","text":"outlines propose change rdcmchecks. detailed discussion contributing r-dcm packages, please see tidyverse development contributing guide code review principles, also followed .","code":""},{"path":"https://rdcmchecks.r-dcm.org/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to dcmdata","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://rdcmchecks.r-dcm.org/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to dcmdata","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See tidyverse guide create great issue advice.","code":""},{"path":"https://rdcmchecks.r-dcm.org/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to dcmdata","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"r-dcm/dcmdata\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://rdcmchecks.r-dcm.org/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to dcmdata","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://rdcmchecks.r-dcm.org/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to dcmdata","text":"Please note dcmdata project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://rdcmchecks.r-dcm.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 rdcmchecks authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rdcmchecks.r-dcm.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"W. Jake Thompson. Author, maintainer. . Copyright holder. . Funder.","code":""},{"path":"https://rdcmchecks.r-dcm.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thompson W (2025). rdcmchecks: Common Argument Checks 'r-dcm' Packages. R package version 0.0.0.9000, https://rdcmchecks.r-dcm.org.","code":"@Manual{,   title = {rdcmchecks: Common Argument Checks for 'r-dcm' Packages},   author = {W. Jake Thompson},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://rdcmchecks.r-dcm.org}, }"},{"path":"https://rdcmchecks.r-dcm.org/index.html","id":"rdcmchecks","dir":"","previous_headings":"","what":"Common Argument Checks for r-dcm Packages","title":"Common Argument Checks for r-dcm Packages","text":"goal rdcmchecks provide utility functions checking arguments provided functions across suite r-dcm packages. Rather duplicating code checking arguments across packages, check functions can added rdcmchecks, can turn imported needed packages.","code":""},{"path":"https://rdcmchecks.r-dcm.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Common Argument Checks for r-dcm Packages","text":"can install development version rdcmchecks GitHub :","code":"# install.packages(\"pak\") pak::pak(\"r-dcm/rdcmchecks\")"},{"path":"https://rdcmchecks.r-dcm.org/index.html","id":"contributions-and-code-of-conduct","dir":"","previous_headings":"","what":"Contributions and Code of Conduct","title":"Common Argument Checks for r-dcm Packages","text":"Contributions welcome. ensure smooth process, please review Contributing Guide. Please note rdcmchecks project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://rdcmchecks.r-dcm.org/reference/abort_bad_argument.html","id":null,"dir":"Reference","previous_headings":"","what":"Send an error message for an unexpected argument input — abort_bad_argument","title":"Send an error message for an unexpected argument input — abort_bad_argument","text":"Send error message unexpected argument input","code":""},{"path":"https://rdcmchecks.r-dcm.org/reference/abort_bad_argument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Send an error message for an unexpected argument input — abort_bad_argument","text":"","code":"abort_bad_argument(   arg,   must = NULL,   not = NULL,   footer = NULL,   custom = NULL,   call = rlang::caller_env() )"},{"path":"https://rdcmchecks.r-dcm.org/reference/abort_bad_argument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Send an error message for an unexpected argument input — abort_bad_argument","text":"arg name argument. must requirement input values met. current state argument problematic. footer Additional text add error message. custom custom error message override default message must + . call call stack.","code":""},{"path":"https://rdcmchecks.r-dcm.org/reference/abort_bad_argument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Send an error message for an unexpected argument input — abort_bad_argument","text":"error message created cli::cli_abort().","code":""},{"path":"https://rdcmchecks.r-dcm.org/reference/abort_bad_argument.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Send an error message for an unexpected argument input — abort_bad_argument","text":"","code":"try(abort_bad_argument(arg = \"my_arg\", must = \"be a character vector\")) #> Error in eval(expr, envir) : `my_arg` must be a character vector"},{"path":"https://rdcmchecks.r-dcm.org/reference/check_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that data follows the expected structure — check_data","title":"Check that data follows the expected structure — check_data","text":"data 1 row per respondent 1 column per item, optional additional column store respondent identifiers. value data 0 1 indicate response item given respondent. clean_data() calls check_data() verify expected structure, performs additional data manipulation provide standard conventions. See details additional information.","code":""},{"path":"https://rdcmchecks.r-dcm.org/reference/check_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that data follows the expected structure — check_data","text":"","code":"check_data(   x,   identifier = NULL,   missing = NA,   arg = rlang::caller_arg(x),   call = rlang::caller_env() )  clean_data(   x,   identifier = NULL,   missing = NA,   cleaned_qmatrix,   arg_qmatrix = rlang::caller_arg(cleaned_qmatrix),   valid_names = NULL,   arg = rlang::caller_arg(x),   call = rlang::caller_env() )"},{"path":"https://rdcmchecks.r-dcm.org/reference/check_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that data follows the expected structure — check_data","text":"x provided data check. identifier provided respondent identifier, character string. respondent identifier present, value NULL (default). missing expression specifying missing data x coded (e.g., NA, \".\", -99). default NA. arg name argument. call call stack. cleaned_qmatrix cleaned Q-matrix, clean_qmatrix(). arg_qmatrix character string name argument used provide Q-matrix. valid_names optional named vector items (e.g., previous call clean_data()). Used checking new data objects consistency items used estimate model.","code":""},{"path":"https://rdcmchecks.r-dcm.org/reference/check_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that data follows the expected structure — check_data","text":"check_data returns original data (checks pass) tibble, missing data (.e., missing) replaced NA. clean_data returns list five elements: clean_data: cleaned data item_identifier: real name item identifier item_names: real names items respondent_identifier: real name respondent identifier respondent_names: real names respondents","code":""},{"path":"https://rdcmchecks.r-dcm.org/reference/check_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check that data follows the expected structure — check_data","text":"many instances, important standard conventions data object know expect (e.g., respondent item identifiers, data types). clean_data() provides standardization. Cleaned data returned long format, one row per response. Respondent item columns encoded factors, responses coerced integer values. ensure downstream functions able identify original (pre-cleaned) values, clean_data() returns list includes cleaned data, well metadata includes look-ups original cleaned values.","code":""},{"path":"https://rdcmchecks.r-dcm.org/reference/check_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check that data follows the expected structure — check_data","text":"","code":"example_data <- tibble::tibble(person = 1:10,                                item1 = sample(0:1, 10, replace = TRUE),                                item2 = sample(0:1, 10, replace = TRUE),                                item3 = sample(0:1, 10, replace = TRUE)) check_data(example_data, identifier = \"person\") #> # A tibble: 10 × 4 #>    person item1 item2 item3 #>     <int> <int> <int> <int> #>  1      1     0     0     0 #>  2      2     1     1     0 #>  3      3     0     0     1 #>  4      4     0     0     0 #>  5      5     0     1     1 #>  6      6     1     1     1 #>  7      7     1     0     0 #>  8      8     0     0     0 #>  9      9     0     1     1 #> 10     10     0     0     1 example_qmatrix <- tibble::tibble(item = paste0(\"item\", 1:3),                                   att_1 = c(0, 0, 1),                                   att_2 = c(1, 1, 1))  example_data <- tibble::tibble(person = 1:10,                                item1 = sample(0:1, 10, replace = TRUE),                                item2 = sample(0:1, 10, replace = TRUE),                                item3 = sample(0:1, 10, replace = TRUE))  qmatrix <- clean_qmatrix(example_qmatrix, identifier = \"item\") clean_data(example_data, identifier = \"person\",            cleaned_qmatrix = qmatrix) #> $clean_data #> # A tibble: 30 × 3 #>    resp_id item_id score #>    <fct>   <fct>   <int> #>  1 1       item1       1 #>  2 1       item2       1 #>  3 1       item3       0 #>  4 2       item1       0 #>  5 2       item2       0 #>  6 2       item3       0 #>  7 3       item1       0 #>  8 3       item2       1 #>  9 3       item3       1 #> 10 4       item1       1 #> # ℹ 20 more rows #>  #> $item_identifier #> [1] \"item\" #>  #> $item_names #> item1 item2 item3  #>     1     2     3  #>  #> $respondent_identifier #> [1] \"person\" #>  #> $respondent_names #>  1  2  3  4  5  6  7  8  9 10  #>  1  2  3  4  5  6  7  8  9 10  #>"},{"path":"https://rdcmchecks.r-dcm.org/reference/check_qmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that a Q-matrix follows the expected structure — check_qmatrix","title":"Check that a Q-matrix follows the expected structure — check_qmatrix","text":"Q-matrix 1 row per item 1 column per attribute, optional additional column store item identifiers. value Q-matrix 0 1 indicate measurement attribute given item. clean_qmatrix() calls check_qmatrix() verify expected structure, performs additional data manipulation provide standard conventions. See details additional information.","code":""},{"path":"https://rdcmchecks.r-dcm.org/reference/check_qmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that a Q-matrix follows the expected structure — check_qmatrix","text":"","code":"check_qmatrix(   x,   identifier = NULL,   arg = rlang::caller_arg(x),   call = rlang::caller_env() )  clean_qmatrix(   x,   identifier = NULL,   arg = rlang::caller_arg(x),   call = rlang::caller_env() )"},{"path":"https://rdcmchecks.r-dcm.org/reference/check_qmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that a Q-matrix follows the expected structure — check_qmatrix","text":"x provided Q-matrix check. identifier provided item identifier, character string. item identifier present, value NULL (default). arg name argument. call call stack.","code":""},{"path":"https://rdcmchecks.r-dcm.org/reference/check_qmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that a Q-matrix follows the expected structure — check_qmatrix","text":"check_qmatrix returns original Q-matrix (checks pass) tibble one row per item. clean_qmatrix returns list four elements: clean_qmatrix: cleaned Q-matrix attribute_names: real names attributes item_identifier: real name item identifier item_names: real names items","code":""},{"path":"https://rdcmchecks.r-dcm.org/reference/check_qmatrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check that a Q-matrix follows the expected structure — check_qmatrix","text":"many instances, important standard conventions Q-matrix know expect (e.g., item identifiers, attribute names). clean_qmatrix() provides standardization. cleaned Q-matrix, item identifiers item names removed. Additionally, attributes renamed att1, att2, att3, etc. Finally, columns coerced integer values. ensure downstream functions able identify original (pre-cleaned) values, clean_qmatrix() returns list includes cleaned Q-matrix, well metadata includes look-ups original cleaned values.","code":""},{"path":"https://rdcmchecks.r-dcm.org/reference/check_qmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check that a Q-matrix follows the expected structure — check_qmatrix","text":"","code":"example_qmatrix <- tibble::tibble(item = paste0(\"item_\", 1:5),                                   att_1 = c(0, 0, 1, 1, 1),                                   att_2 = c(1, 1, 1, 0, 0)) check_qmatrix(example_qmatrix, identifier = \"item\") #> # A tibble: 5 × 3 #>   item   att_1 att_2 #>   <chr>  <int> <int> #> 1 item_1     0     1 #> 2 item_2     0     1 #> 3 item_3     1     1 #> 4 item_4     1     0 #> 5 item_5     1     0  example_qmatrix <- tibble::tibble(item = paste0(\"item_\", 1:5),                                   att_1 = c(0, 0, 1, 1, 1),                                   att_2 = c(1, 1, 1, 0, 0)) clean_qmatrix(example_qmatrix, identifier = \"item\") #> $clean_qmatrix #> # A tibble: 5 × 2 #>    att1  att2 #>   <int> <int> #> 1     0     1 #> 2     0     1 #> 3     1     1 #> 4     1     0 #> 5     1     0 #>  #> $attribute_names #>  att_1  att_2  #> \"att1\" \"att2\"  #>  #> $item_identifier #> [1] \"item\" #>  #> $item_names #> item_1 item_2 item_3 item_4 item_5  #>      1      2      3      4      5  #>"},{"path":"https://rdcmchecks.r-dcm.org/reference/rdcmchecks-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rdcmchecks: Common Argument Checks for 'r-dcm' Packages — rdcmchecks-package","title":"rdcmchecks: Common Argument Checks for 'r-dcm' Packages — rdcmchecks-package","text":"Many packages r-dcm family take similar arguments, checked expected structures values. Rather duplicating code across several packages, commonly used check functions included . package can imported access check functions packages.","code":""},{"path":[]},{"path":"https://rdcmchecks.r-dcm.org/reference/rdcmchecks-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rdcmchecks: Common Argument Checks for 'r-dcm' Packages — rdcmchecks-package","text":"Maintainer: W. Jake Thompson wjakethompson@gmail.com (ORCID) contributors: University Kansas [copyright holder] Accessible Teaching, Learning, Assessment Systems [funder]","code":""}]
